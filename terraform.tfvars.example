#################################### PROJECT TITLE ####################################
# ✅ AWS Provider Configuration
PROJECT_NAME = "project"

#################################### PROVIDER ####################################
# ✅ AWS Provider Configuration
# These variables store AWS credentials and the region to deploy resources.

AWS_ACCOUNT_NUMBER = "123456789012"  # Replace with your AWS account number
AWS_ACCESS_KEY = "YOUR-AWS-ACCESS-KEY"  # Replace with your AWS Access Key
AWS_SECRET_KEY = "YOUR-AWS-SECRET-KEY"  # Replace with your AWS Secret Key
AWS_REGION = "us-east-1"  # AWS region where infrastructure is deployed

#################################### S3 ####################################
# ✅ S3 Bucket Configuration
# Used for frontend hosting.

s3_frontend_bucket_name = "your-bucket-name"
s3_frontend_bucket_versioning = "Disabled"  # Options: Enabled / Disabled
s3_frontend_bucket_force_destroy = true  # Change to true if you want to delete the bucket with contents
s3_frontend_bucket_object_lock = false  # Enable object lock for extra security

#################################### ACM (SSL CERTIFICATES) ####################################
# ✅ AWS Certificate Manager (ACM) for securing domains.

domain_name = "example.com"  # Primary domain for the project
validation_method = "DNS"  # Validation method for SSL certificate
acm_alternative_names = ["*.example.com"]  # Alternative domain names (wildcard for subdomains)

#################################### ROUTE 53 (DNS) ####################################
# ✅ AWS Route 53 for domain management.

r53_domain_name = "example.com"  # Hosted zone domain name
r53_force_destroy = true        # Forcefully delete hosted zone (use cautiously!)

#################################### OAC (Origin Access Control) ####################################
# ✅ This section manages access to S3 via CloudFront.

oac_type = "s3"
oac_signing_behavior = "always"
oac_signing_protocol = "sigv4"

#################################### CLOUDFRONT (CDN) ####################################
# ✅ Amazon CloudFront for content delivery and caching.

cf_enable = true
cf_ipv6 = true
cf_root_object = "index.html"
#cf_logs_bucket = ""                    # Uncomment if logging enabled
cf_cookies_enabled= false
cf_aliases = ["example.com", "www.example.com"]
cf_allowed_methods = ["GET", "HEAD"]
cf_cached_methods = ["GET", "HEAD"]
cf_query_string = false
cf_cookies_forward = "none"
cf_viewer_protocol_policy = "allow-all"
cf_priceclass = "PriceClass_All"
cf_restriction_type = "none"
cf_restricted_locations= []
cf_default_certificate= true
cf_ssl_support_method = "sni-only"
cf_min_protocol_version = "TLSv1.2_2021"
alias_record_domain = "example.com"
alternative_alias_record_domain = "www.example.com"
# Other CloudFront settings remain default and can be customized if needed.

#################################### VPC (NETWORKING) ####################################
# ✅ Amazon VPC setup for networking.

project_vpc_name = "${PROJECT_NAME}-vpc"
vpc_cidr_block = "10.0.0.0/16"
public_subnet_cidr_1 = "10.0.0.0/20"
public_subnet_cidr_2 = "10.0.32.0/20"
private_subnet_cidr_1 = "10.0.16.0/20"
private_subnet_cidr_2 = "10.0.48.0/20"
ipv6_on_creation = false
az_private_1 = "us-east-1a"
az_public_1 = "us-east-1a"
az_public_2 = "us-east-1b"
az_private_2 = "us-east-1b"

#################################### EC2 (COMPUTE INSTANCES) ####################################
# ✅ Amazon EC2 for hosting web applications.

ec2_instance_name = "${PROJECT_NAME}-Public_Server"
ec2_instance_type = "t2.micro"
ec2_keypair_name = "${PROJECT_NAME}_EC2_keypair"
ec2_public_security_group_name = "${PROJECT_NAME}_EC2_Public_SG"
ec2_private_security_group_name = "${PROJECT_NAME}_EC2_Private_SG"
ec2_root_volume_size = 8  # Root volume size in GB
ec2_root_volume_type = "gp3"  # Volume type (gp2, gp3, io1, etc.)

# ✅ Additional Volume for Amazon EC2 Instance.
# ec2_ebs_volume_size = 20     # Additional EBS volume size in GB     
# ec2_ebs_volume_type = "gp3"   # Volume type (gp2, gp3, io1, etc.)
# ec2_ebs_device_name = "/dev/xvdf"     # Default for Ubuntu (For storage types T2, T3, T4g, M5, C5, R5, etc.)
# ec2_ebs_iops = 3000
# ec2_ebs_throughput = 125
# ec2_ebs_encryted = true
# ec2_ebs_delete_on_termination = true

#################################### RDS (DATABASE) ####################################
# ✅ Amazon RDS for database hosting.

db_storage_size = 22
db_max_allocated_size = 1000
db_engine = "sqlserver-se"
db_engine_version = "15.00.4415.2.v1"
db_instance_class = "db.m5.large"
db_instance_identifier = "project-db"
db_username = "admin1234"
db_password = "admin1234"
db_storage_type = "gp3"
db_multi_az = true
db_private_sg_name = "${PROJECT_NAME}_db_rds_sg"
db_skip_final_snapshot = true
db_port = 1433
db_publicly_accessible = false
db_backup_rentention_period = 7
db_backup_window = "03:00-05:00"
db_copy_tags_to_snapshot = true
db_kms_key_id = "alias/aws/rds"
db_auto_minor_upgrade = true
db_subnet_group_name = "${PROJECT_NAME}_db_subnet_group"
db_license_model = "license-included"
db_deletion_protection = false

#################################### EKS (KUBERNETES) ####################################
# ✅ Amazon EKS for Kubernetes cluster management.

eks_iam_cluster_role_name = "${PROJECT_NAME}_IAM_Cluster_Role"
eks_cluster_name = "${PROJECT_NAME}_Cluster"
eks_node_group_name = "${PROJECT_NAME}_Node_group"
eks_node_group_role_name = "${PROJECT_NAME}_Node_Group_Role"
eks_kubernetes_version = "1.31"
eks_launch_template_instance_type = "t2.medium"
eks_launch_template_volume_size = 20
eks_launch_template_volume_type = "gp3"
eks_nodes_detailed_monitoring = false
remove_old_policy = true
eks_worker_node_ami_id = "ami-005cb9eccb9a1b0f2"
eks_addon_coredns_version = "v1.11.3-eksbuild.1"
eks_addon_kube_proxy_version = "v1.31.2-eksbuild.3"
eks_addon_metric_server_version = "v0.7.2-eksbuild.1"
#eks_addon_pod_identity_version = "v0.7.2-eksbuild.1"       # Uncomment if needed
eks_addon_vpc_cni_version = "v1.19.0-eksbuild.1"

#################################### ECR (CONTAINER REGISTRY) ####################################
# ✅ Amazon ECR for managing container images.

ecr_repository_name = "${PROJECT_NAME}_ecr_repo"
ecr_encryption_type = "AES256"
ecr_mutability = "MUTABLE"
ecr_force_delete = true
ecr_image_scan = false